library(hrbrthemes)
library(dplyr)
a <- rlnorm(100, meanlog=5, sdlog=0.5) # a is our vector of the sample with mu=5 and sigma=0.5
df <- data.frame(value=a, dummy=c(rep("A")))  # creating a small data frame
ggplot(df, aes(x=value)) +
geom_histogram( binwidth=15, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (mu=5, sigma=0.5)")
ggplot(df, aes(x=log(a))) +
geom_histogram( binwidth=0.1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (log-transformed) (mu=5, sigma=0.5)")
mean_df <- round(mean(df$value)) #mean
sd_df <- round(sd(df$value)) #standard deviation
# Violin plot
ggplot(df, aes(x=value, y=dummy)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin()
# Histogram
ggplot(df, aes(x=value)) +
geom_histogram( binwidth=15, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (mu=5, sigma=0.5)")
df <- data.frame(value=a, dummy=c(rep("A")))  # creating a small data frame
# Histogram
ggplot(df, aes(x=value)) +
geom_histogram( binwidth=15, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (mu=5, sigma=0.5)")
# Violin plot
ggplot(df, aes(x=value, y=dummy)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin()
# loading libraries
library(ggplot2)
library(hrbrthemes)
library(dplyr)
a <- rlnorm(100, meanlog=5, sdlog=0.5) # a is our vector of the sample with mu=5 and sigma=0.5
df <- data.frame(value=a, dummy=c(rep("A")))  # creating a small data frame
# Histogram
ggplot(df, aes(x=value)) +
geom_histogram( binwidth=15, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (mu=5, sigma=0.5)")
# Violin plot
ggplot(df, aes(x=value, y=dummy)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin()
ggplot(df, aes(x=log(a))) +
geom_histogram( binwidth=0.1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (log-transformed) (mu=5, sigma=0.5)")
# Violin plot
ggplot(df, aes(x=log(value), y=dummy)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin()
mean_df <- round(mean(df$value)) #mean
sd_df <- round(sd(df$value)) #standard deviation
# Violin plot
ggplot(df, aes(x=log(value), y=dummy)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
theme(axis.text.x=element_blank(), #remove x axis labels
axis.ticks.x=element_blank(), #remove x axis ticks
axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank()  #remove y axis ticks
)+
geom_violin()
# Violin plot
ggplot(df, aes(x=log(value), y=dummy)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
theme(axis.text.x=element_blank(), #remove x axis labels
axis.ticks.x=element_blank(), #remove x axis ticks
axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank()  #remove y axis ticks
)+
geom_violin()
# Violin plot
ggplot(df, aes(x=log(value), y=dummy)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin()
geom_violin()
# Violin plot
ggplot(df, aes(x=log(value), y=dummy)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
theme(axis.text.x=element_blank(), #remove x axis labels
axis.ticks.x=element_blank(), #remove x axis ticks
axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank()  #remove y axis ticks
)+
geom_violin()
# Violin plot
ggplot(df, aes(x=log(value), y=dummy)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin()
# loading libraries
library(ggplot2)
library(hrbrthemes)
library(dplyr)
a <- rlnorm(100, meanlog=5, sdlog=0.5) # a is our vector of the sample with mu=5 and sigma=0.5
df <- data.frame(value=a, A=c(rep("A")))  # creating a small data frame
# Histogram
ggplot(df, aes(x=value)) +
geom_histogram( binwidth=15, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (mu=5, sigma=0.5)")
# Violin plot
ggplot(df, aes(x=value, y=dummy)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin()
source("~/.active-rstudio-document", echo=TRUE)
# Histogram
ggplot(df, aes(x=value)) +
geom_histogram( binwidth=15, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (mu=5, sigma=0.5)")  +
labs(x="test")
df <- data.frame(value=a, A=c(rep("A")))  # creating a small data frame
# Histogram
ggplot(df, aes(x=value)) +
geom_histogram( binwidth=15, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (mu=5, sigma=0.5)")  +
labs(x="test")
# Violin plot
ggplot(df, aes(x=value, y=A)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin()
# Violin plot
ggplot(df, aes(x=value, y=A)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
labs(x="counted sample values") +
geom_violin()
# Violin plot
ggplot(df, aes(x=value, y=A)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
labs(x="counted sample values", y="") +
geom_violin()
ggplot(df, aes(x=log(a))) +
geom_histogram( binwidth=0.1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (log-transformed) (mu=5, sigma=0.5)") +
labs(x="counted sample values, log-transformed")
# Violin plot
ggplot(df, aes(x=log(value), y=A)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
labs(x="counted sample values")+
geom_violin()
# Violin plot
ggplot(df, aes(x=log(value), y=A)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin() +
labs(x="counted sample values")
# Violin plot
ggplot(df, aes(x=log(value), y=A)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin() +
labs(x="counted sample values, log-transformed")
?noecho
#| echo=false
# loading libraries
library(ggplot2)
#| echo: false
# loading libraries
library(ggplot2)
# loading libraries
#| output: false
library(ggplot2)
# Violin plot
ggplot(df, aes(x=value, y=A)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
labs(x="counted sample values", y="") +
geom_violin(fill="grey")
# Violin plot
ggplot(df, aes(x=value, y=A)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
labs(x="counted sample values", y="") +
geom_violin(fill="lavenderblush")
# Violin plot
ggplot(df, aes(x=value, y=A)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
labs(x="counted sample values", y="") +
geom_violin(fill="lavender")
# Violin plot
ggplot(df, aes(x=log(value), y=A)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin(fill="lavenderblush") +
labs(x="counted sample values, log-transformed")
# Violin plot
ggplot(df, aes(x=log(value), y=A)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin(fill="lavenderblush") +
labs(x="counted sample values, log-transformed", y="")
# Violin plot
ggplot(df, aes(x=log(value), y=A)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin(fill="lavenderblush") +
geom_boxplot(width=0.1) +
labs(x="counted sample values, log-transformed", y="")
# Violin plot
ggplot(df, aes(x=log(value), y=A)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin(fill="lavenderblush") +
geom_boxplot(width=0.1) +
labs(x="counted sample values, log-transformed", y="", caption="test")
# Violin plot
ggplot(df, aes(x=log(value), y=A)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin(fill="lavenderblush") +
geom_boxplot(width=0.1) +
labs(x="counted sample values, log-transformed", y="", subtitle="ets ")
# Violin plot
ggplot(df, aes(x=value, y=A)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
labs(x="counted sample values", y="", subtitle="The added boxplot shows the median and the quartiles") +
geom_boxplot(width=0.1) +
geom_violin(fill="lavender")
# Violin plot
ggplot(df, aes(x=value, y=A)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
labs(x="counted sample values", y="", subtitle="The added boxplot shows the median and the quartiles") +
geom_violin(fill="lavender") +
geom_boxplot(width=0.1)
df <- data.frame(value=a, A=c(rep("A")))  # creating a small data frame
# Histogram
ggplot(df, aes(x=value)) +
geom_histogram( binwidth=15, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (mu=5, sigma=0.5)")  +
labs(x="counted sample values")
#| output: false
# loading libraries
library(ggplot2)
library(hrbrthemes)
library(dplyr)
a <- rlnorm(100, meanlog=5, sdlog=0.5) # a is our vector of the sample with mu=5 and sigma=0.5
df <- data.frame(value=a, A=c(rep("A")))  # creating a small data frame
# Histogram
ggplot(df, aes(x=value)) +
geom_histogram( binwidth=15, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (mu=5, sigma=0.5)")  +
labs(x="counted sample values")
# Violin plot
ggplot(df, aes(x=A, y=value)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
labs(x="counted sample values", y="", subtitle="The added boxplot shows the median and the quartiles") +
geom_violin(fill="lavender") +
geom_boxplot(width=0.1)
ggplot(df, aes(x=log(a))) +
geom_histogram( binwidth=0.1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (log-transformed) (mu=5, sigma=0.5)") +
labs(x="counted sample values, log-transformed")
# Violin plot
ggplot(df, aes(x=log(value), y=A)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin(fill="lavenderblush") +
geom_boxplot(width=0.1) +
labs(x="counted sample values, log-transformed", y="", subtitle="The added boxplot shows the median and the quartiles")
mean_df <- round(mean(df$value)) #mean
sd_df <- round(sd(df$value)) #standard deviation
# Violin plot
ggplot(df, aes(x=A, y=log(value))) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin(fill="lavenderblush") +
geom_boxplot(width=0.1) +
labs(x="counted sample values, log-transformed", y="", subtitle="The added boxplot shows the median, quartiles, furthest non-outlier points (whiskers) and outliers (points)")
?seed
??seed
?set.seed
set.seed(1)
set.seed(1)
#| output: false
# loading libraries
library(ggplot2)
library(hrbrthemes)
library(dplyr)
set.seed(1)
a <- rlnorm(100, meanlog=5, sdlog=0.5) # a is our vector of the sample with mu=5 and sigma=0.5
df <- data.frame(value=a, A=c(rep("A")))  # creating a small data frame
# Histogram
ggplot(df, aes(x=value)) +
geom_histogram( binwidth=15, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (mu=5, sigma=0.5)")  +
labs(x="counted sample values")
# Violin plot
ggplot(df, aes(x=A, y=value)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
labs(x="counted sample values", y="", subtitle="The added boxplot shows the median, quartiles, furthest non-outlier points (whiskers) and outliers (points)") +
geom_violin(fill="lavender") +
geom_boxplot(width=0.1)
ggplot(df, aes(x=log(a))) +
geom_histogram( binwidth=0.1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (log-transformed) (mu=5, sigma=0.5)") +
labs(x="counted sample values, log-transformed")
# Violin plot
ggplot(df, aes(x=A, y=log(value))) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin(fill="lavenderblush") +
geom_boxplot(width=0.1) +
labs(x="counted sample values, log-transformed", y="", subtitle="The added boxplot shows the median, quartiles, furthest non-outlier points (whiskers) and outliers (points)")
mean_df <- round(mean(df$value)) #mean
sd_df <- round(sd(df$value)) #standard deviation
#| output: false
# loading libraries
library(hrbrthemes)
library(dplyr)
set.seed(1)
a <- rlnorm(100, meanlog=5, sdlog=0.5) # a is our vector of the sample with mu=5 and sigma=0.5
df <- data.frame(value=a, A=c(rep("A")))  # creating a small data frame
# Histogram
ggplot(df, aes(x=value)) +
geom_histogram( binwidth=15, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (mu=5, sigma=0.5)")  +
labs(x="counted sample values")
# Violin plot
ggplot(df, aes(x=A, y=value)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
labs(x="counted sample values", y="", subtitle="The added boxplot shows the median, quartiles, furthest non-outlier points (whiskers) and outliers (points)") +
geom_violin(fill="lavender") +
geom_boxplot(width=0.1)
ggplot(df, aes(x=log(a))) +
geom_histogram( binwidth=0.1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (log-transformed) (mu=5, sigma=0.5)") +
labs(x="counted sample values, log-transformed")
# Violin plot
ggplot(df, aes(x=A, y=log(value))) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin(fill="lavenderblush") +
geom_boxplot(width=0.1) +
labs(x="counted sample values, log-transformed", y="", subtitle="The added boxplot shows the median, quartiles, furthest non-outlier points (whiskers) and outliers (points)")
mean_df <- round(mean(df$value)) #mean
sd_df <- round(sd(df$value)) #standard deviation
#| output: false
# loading libraries
library(ggplot2)
library(hrbrthemes)
library(dplyr)
set.seed(1)
a <- rlnorm(100, meanlog=5, sdlog=0.5) # a is our vector of the sample with mu=5 and sigma=0.5
df <- data.frame(value=a, A=c(rep("A")))  # creating a small data frame
# Histogram
ggplot(df, aes(x=value)) +
geom_histogram( binwidth=15, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (mu=5, sigma=0.5)")  +
labs(x="counted sample values")
# Violin plot
ggplot(df, aes(x=A, y=value)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
labs(x="counted sample values", y="", subtitle="The added boxplot shows the median, quartiles, furthest non-outlier points (whiskers) and outliers (points)") +
geom_violin(fill="lavender") +
geom_boxplot(width=0.1)
ggplot(df, aes(x=log(a))) +
geom_histogram( binwidth=0.1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (log-transformed) (mu=5, sigma=0.5)") +
labs(x="counted sample values, log-transformed")
# Violin plot
ggplot(df, aes(x=A, y=log(value))) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin(fill="lavenderblush") +
geom_boxplot(width=0.1) +
labs(x="counted sample values, log-transformed", y="", subtitle="The added boxplot shows the median, quartiles, furthest non-outlier points (whiskers) and outliers (points)")
mean_df <- round(mean(df$value)) #mean
sd_df <- round(sd(df$value)) #standard deviation
#| output: false
# loading libraries
library(ggplot2)
library(hrbrthemes)
library(dplyr)
set.seed(1)
a <- rlnorm(100, meanlog=5, sdlog=0.5) # a is our vector of the sample with mu=5 and sigma=0.5
df <- data.frame(value=a, A=c(rep("A")))  # creating a small data frame
# Histogram
ggplot(df, aes(x=value)) +
geom_histogram( binwidth=15, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (mu=5, sigma=0.5)")  +
labs(x="counted sample values")
# Violin plot
ggplot(df, aes(x=A, y=value)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
labs(x="counted sample values", y="", subtitle="The added boxplot shows the median, quartiles, furthest non-outlier points (whiskers) and outliers (points)") +
geom_violin(fill="lavender") +
geom_boxplot(width=0.1)
ggplot(df, aes(x=log(a))) +
geom_histogram( binwidth=0.1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (log-transformed) (mu=5, sigma=0.5)") +
labs(x="counted sample values, log-transformed")
# Violin plot
ggplot(df, aes(x=A, y=log(value))) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin(fill="lavenderblush") +
geom_boxplot(width=0.1) +
labs(x="counted sample values, log-transformed", y="", subtitle="The added boxplot shows the median, quartiles, furthest non-outlier points (whiskers) and outliers (points)")
mean_df <- round(mean(df$value)) #mean
sd_df <- round(sd(df$value)) #standard deviation
#| output: false
# loading libraries
library(ggplot2)
library(hrbrthemes)
library(dplyr)
set.seed(1)
a <- rlnorm(100, meanlog=5, sdlog=0.5) # a is our vector of the sample with mu=5 and sigma=0.5
df <- data.frame(value=a, A=c(rep("A")))  # creating a small data frame
# Histogram
ggplot(df, aes(x=value)) +
geom_histogram( binwidth=15, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (mu=5, sigma=0.5)")  +
labs(x="counted sample values")
# Violin plot
ggplot(df, aes(x=A, y=value)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
labs(x="counted sample values", y="", subtitle="The added boxplot shows the median, quartiles, furthest non-outlier points (whiskers) and outliers (points)") +
geom_violin(fill="lavender") +
geom_boxplot(width=0.1)
ggplot(df, aes(x=log(a))) +
geom_histogram( binwidth=0.1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (log-transformed) (mu=5, sigma=0.5)") +
labs(x="counted sample values, log-transformed")
# Violin plot
ggplot(df, aes(x=A, y=log(value))) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin(fill="lavenderblush") +
geom_boxplot(width=0.1) +
labs(x="counted sample values, log-transformed", y="", subtitle="The added boxplot shows the median, quartiles, furthest non-outlier points (whiskers) and outliers (points)")
mean_df <- round(mean(df$value)) #mean
sd_df <- round(sd(df$value)) #standard deviation
#| output: false
# loading libraries
library(ggplot2)
library(hrbrthemes)
library(dplyr)
set.seed(1)
a <- rlnorm(100, meanlog=5, sdlog=0.5) # a is our vector of the sample with mu=5 and sigma=0.5
df <- data.frame(value=a, A=c(rep("A")))  # creating a small data frame
# Histogram
ggplot(df, aes(x=value)) +
geom_histogram( binwidth=15, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (mu=5, sigma=0.5)")  +
labs(x="counted sample values")
# Violin plot
ggplot(df, aes(x=A, y=value)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
labs(x="counted sample values", y="", subtitle="The added boxplot shows the median, quartiles, furthest non-outlier points (whiskers) and outliers (points)") +
geom_violin(fill="lavender") +
geom_boxplot(width=0.1)
ggplot(df, aes(x=log(a))) +
geom_histogram( binwidth=0.1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (log-transformed) (mu=5, sigma=0.5)") +
labs(x="counted sample values, log-transformed")
# Violin plot
ggplot(df, aes(x=A, y=log(value))) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin(fill="lavenderblush") +
geom_boxplot(width=0.1) +
labs(x="counted sample values, log-transformed", y="", subtitle="The added boxplot shows the median, quartiles, furthest non-outlier points (whiskers) and outliers (points)")
mean_df <- round(mean(df$value)) #mean
sd_df <- round(sd(df$value)) #standard deviation
#| output: false
# loading libraries
library(ggplot2)
library(hrbrthemes)
library(dplyr)
set.seed()
#| output: false
# loading libraries
library(ggplot2)
library(hrbrthemes)
library(dplyr)
set.seed(10)
a <- rlnorm(100, meanlog=5, sdlog=0.5) # a is our vector of the sample with mu=5 and sigma=0.5
df <- data.frame(value=a, A=c(rep("A")))  # creating a small data frame
# Histogram
ggplot(df, aes(x=value)) +
geom_histogram( binwidth=15, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (mu=5, sigma=0.5)")  +
labs(x="counted sample values")
# Violin plot
ggplot(df, aes(x=A, y=value)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
labs(x="counted sample values", y="", subtitle="The added boxplot shows the median, quartiles, furthest non-outlier points (whiskers) and outliers (points)") +
geom_violin(fill="lavender") +
geom_boxplot(width=0.1)
ggplot(df, aes(x=log(a))) +
geom_histogram( binwidth=0.1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (log-transformed) (mu=5, sigma=0.5)") +
labs(x="counted sample values, log-transformed")
# Violin plot
ggplot(df, aes(x=A, y=log(value))) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin(fill="lavenderblush") +
geom_boxplot(width=0.1) +
labs(x="counted sample values, log-transformed", y="", subtitle="The added boxplot shows the median, quartiles, furthest non-outlier points (whiskers) and outliers (points)")
mean_df <- round(mean(df$value)) #mean
sd_df <- round(sd(df$value)) #standard deviation
#| output: false
# loading libraries
library(ggplot2)
library(hrbrthemes)
library(dplyr)
set.seed(1)
a <- rlnorm(100, meanlog=5, sdlog=0.5) # a is our vector of the sample with mu=5 and sigma=0.5
df <- data.frame(value=a, A=c(rep("A")))  # creating a small data frame
# Histogram
ggplot(df, aes(x=value)) +
geom_histogram( binwidth=15, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (mu=5, sigma=0.5)")  +
labs(x="counted sample values")
# Violin plot
ggplot(df, aes(x=A, y=value)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
labs(x="counted sample values", y="", subtitle="The added boxplot shows the median, quartiles, furthest non-outlier points (whiskers) and outliers (points)") +
geom_violin(fill="lavender") +
geom_boxplot(width=0.1)
ggplot(df, aes(x=log(a))) +
geom_histogram( binwidth=0.1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (log-transformed) (mu=5, sigma=0.5)") +
labs(x="counted sample values, log-transformed")
# Violin plot
ggplot(df, aes(x=A, y=log(value))) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin(fill="lavenderblush") +
geom_boxplot(width=0.1) +
labs(x="counted sample values, log-transformed", y="", subtitle="The added boxplot shows the median, quartiles, furthest non-outlier points (whiskers) and outliers (points)")
mean_df <- round(mean(df$value)) #mean
sd_df <- round(sd(df$value)) #standard deviation
#| output: false
# loading libraries
library(ggplot2)
library(hrbrthemes)
library(dplyr)
set.seed(1)
a <- rlnorm(100, meanlog=5, sdlog=0.5) # a is our vector of the sample with mu=5 and sigma=0.5
df <- data.frame(value=a, A=c(rep("A")))  # creating a small data frame
# Histogram
ggplot(df, aes(x=value)) +
geom_histogram( binwidth=15, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (mu=5, sigma=0.5)")  +
labs(x="counted sample values")
# Violin plot
ggplot(df, aes(x=A, y=value)) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
labs(x="counted sample values", y="", subtitle="The added boxplot shows the median, quartiles, furthest non-outlier points (whiskers) and outliers (points)") +
geom_violin(fill="lavender") +
geom_boxplot(width=0.1)
ggplot(df, aes(x=log(a))) +
geom_histogram( binwidth=0.1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +    ggtitle("Histogram of 100 samples of a log-normal distribution (log-transformed) (mu=5, sigma=0.5)") +
labs(x="counted sample values, log-transformed")
# Violin plot
ggplot(df, aes(x=A, y=log(value))) +
ggtitle("Violinplot of the data displayed in the histogram above.")  +
geom_violin(fill="lavenderblush") +
geom_boxplot(width=0.1) +
labs(x="counted sample values, log-transformed", y="", subtitle="The added boxplot shows the median, quartiles, furthest non-outlier points (whiskers) and outliers (points)")
mean_df <- round(mean(df$value)) #mean
sd_df <- round(sd(df$value)) #standard deviation
